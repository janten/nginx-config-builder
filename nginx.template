user                nginx;
worker_processes    4;

error_log            /var/log/nginx/error.log warn;
pid                  /var/run/nginx.pid;

events {
    worker_connections      1024;
}

http {
    resolver                128.176.16.55 128.176.16.3;
    chunked_transfer_encoding on;
    
    include                 /etc/nginx/mime.types;
    default_type            application/octet-stream;
    log_format              main    '$remote_addr - $remote_user [$time_local] "$request" '
                                    '$status $body_bytes_sent "$http_referer" '
                                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log              off;

    proxy_http_version      1.1;
    proxy_redirect          off;
    proxy_set_header        Connection          "";
    proxy_set_header        Host                $host;
    proxy_set_header        X-Real-IP           $remote_addr;
    proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Ssl     on;
    proxy_set_header        X-Forwarded-Proto   $scheme;
    proxy_set_header        X-User              $user;
    
    client_max_body_size    0;
    client_body_buffer_size 128k;
    proxy_connect_timeout   1;
    proxy_send_timeout      90;
    proxy_read_timeout      90;
    proxy_buffers           32 4k;

    sendfile                on;
    tcp_nopush              on;
    server_names_hash_bucket_size 128;

    ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers             'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_certificate         /certs/neuro.ukm.ms/fullchain.pem;
    ssl_certificate_key     /certs/neuro.ukm.ms/privkey.pem;
    error_page              497 https://$host:$server_port$request_uri;

    # Forward http to https    
    server {
        listen         80 default_server;
        listen         [::]:80 default_server;
        server_name    _;
        return         301 https://$host$request_uri;
    }

    {% for server in servers %}
    upstream "us{{ server.hostname | short_hash }}" {
        zone            upstream_configs 1m;
        
        {% for backend in server.backends %}
        server          {{ backend }} resolve;
        {% endfor %}

        keepalive       15;
    }

    server {
        listen          443 ssl http2;
        server_name     {{ server.hostname }};

        {% if server.uses_sso %}
    	auth_request	/internal_auth;
        auth_request_set $user $upstream_http_x_user;       
    
    	error_page 401 = @error401;
    	location @error401 {
    		return 302 https://auth.neuro.ukm.ms/login/?f=$scheme://$host$request_uri;
    	}
        
    	location = /internal_auth {
    		internal;
    		proxy_set_header X-Original-URI $request_uri;
    		proxy_pass_request_body off;
    		proxy_set_header Content-Length "";
    		proxy_pass http://us{{ "auth.neuro.ukm.ms" | short_hash }}/auth/;
    	}
        {% endif %}

        location / {
            {% if server.uses_cors %}
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
               add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
               add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
               add_header 'Access-Control-Allow-Origin' '*';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
               add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            {% endif %}
            proxy_pass          http://us{{ server.hostname | short_hash}};
        }
    }
    {% endfor %}
}
