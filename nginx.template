user                nginx;
worker_processes    4;

error_log            /var/log/nginx/error.log warn;
pid                  /var/run/nginx.pid;

events {
    worker_connections      1024;
}

http {
    resolver                127.0.0.11 valid=30s;
    chunked_transfer_encoding on;
    
    include                 /etc/nginx/mime.types;
    default_type            application/octet-stream;
    log_format              main    '$remote_addr - $remote_user [$time_local] "$request" '
                                    '$status $body_bytes_sent "$http_referer" '
                                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log              off;

    proxy_http_version      1.1;
    proxy_set_header        Connection "";
    proxy_redirect          off;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Ssl on;
    proxy_set_header        X-Forwarded-Proto $scheme;
    client_max_body_size    10m;
    client_body_buffer_size 128k;
    proxy_connect_timeout   1;
    proxy_send_timeout      90;
    proxy_read_timeout      90;
    proxy_buffers           32 4k;

    sendfile                on;
    tcp_nopush              on;
    server_names_hash_bucket_size 128;

    ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers             'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_certificate         /certs/neuro.ukm.ms/fullchain.pem;
    ssl_certificate_key     /certs/neuro.ukm.ms/privkey.pem;
    error_page              497 https://$host:$server_port$request_uri;

    # Forward http to https    
    server {
        listen         80 default_server;
        listen         [::]:80 default_server;
        server_name    _;
        return         301 https://$host$request_uri;
    }

    {% for front, back in servers.items() %}

    upstream "us{{ back | short_hash}}" {
        zone            upstream_configs 1m;
        server          {{ back }} resolve fail_timeout=1m max_fails=2;
        keepalive       15;
    }

    server {
        listen          443 ssl http2;
        server_name     {{ front }};

        location / {
            proxy_pass          http://us{{ back | short_hash}};
        }
        
    }
    {% endfor %}
}
